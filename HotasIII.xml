<?xml version="1.0"?>
<!--
Joystick binding for ThrustMaster T.Flight Hotas X
Adrien Bailly

Original file by 'flug':
http://www.flightgear.org/forums/viewtopic.php?f=2&t=5517


Axis #   (direction)         mapped to
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
axis 0:  (left-right)        aileron
axis 1:  (forward-backward)  elevator
axis 2:  (throttle)          throttle
axis 3:  (twist)             rudder
axis 4:  (throttle rocker)   brake left/right
axis 5:  (top hat)           view left/right
axis 6:  (top hat)           view up/down

Note that internally, FG numbers buttons starting with 0.  The markings on the 
HOTAS-X start with Button 1, and I have used the HOTAS-X number markings below:

Button #     Location               Function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
button 1:   (joystick R1)           Brakes
button 2:   (joystick L1)           Inversion de poussÃ©e
button 3:   (joystick R3)           Push-To-Talk (for fgcom)
button 4:   (joystick L3)           Frein de parking
button 5:   (throttle)              Flaps up
button 6:   (throttle)              Flaps down
button 7:   (throttle)              Cycle HUD
button 8:   (throttle)              Gear up/down
button 9:   (throttle R2)           Changement de vu
button 10:  (throttle L2)           Vue Cockpit
button SE:  (base SE)               Contact magneto
button ST:  (base ST)             Start

HAT SWITCH
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
With the rocker switch and throttle twist controlling view direction, it is easy
to look all around in different directions.
-->

<PropertyList>
   <name type="string">T.Flight Hotas X</name>
   <name type="string">Hotas X</name>
   <name type="string">Thrustmaster Hotas X</name>
   <name type="string">Thrustmaster T.Flight Hotas X</name>
   <nasal>
      <script>
         <![CDATA[
         setprop("/input/joysticks/js[0]/t-flight-hotas-x-modifier1", 0);
         setprop("/input/joysticks/js[0]/t-flight-hotas-x-modifier2", 0);
         ]]>
      </script>
   </nasal>
    
   <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ Axis Bindings ~~~~~~~~~~~~~~~~~~~~~~~~ -->
   <axis n="0">
      <desc>Joystick: Aileron</desc>
      <binding>
         <command>property-scale</command>
         <property>/controls/flight/aileron</property>
         <factor type="double">1.0</factor>
         <power type="double">1.0</power>
      </binding>
   </axis>

   <axis n="1">
      <desc>Joystick: Elevator</desc>
      <binding>
         <command>property-scale</command>
         <property>/controls/flight/elevator</property>
         <factor type="double">-1.0</factor>
         <power type="double">1.0</power>
      </binding>
   </axis>

   <axis n= "2">
      <desc>Throttle</desc>
      <binding>
         <command>nasal</command>
         <script>controls.throttleAxis()</script>
      </binding>
   </axis>

   <axis n="3">
      <desc>Rudder</desc>
      <binding>
         <command>property-scale</command>
         <property>/controls/flight/rudder</property>
         <power type="double">1.0</power>
      </binding>
   </axis>

   <!-- Throttle rocker switch axis pans l/r -->
   <axis n="4">
      <desc>Throttle rocker switch: Brake Left/Right</desc>
     <binding>
      <command>property-scale</command>
      <property>/controls/gear/brake-left</property>
      <factor type="double">-1.0</factor>
     </binding>
     <binding>
      <command>property-scale</command>
      <property>/controls/gear/brake-right</property>
      <factor type="double">1.0</factor>
     </binding>
   </axis>

   <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ Hat Switch ~~~~~~~~~~~~~~~~~~~~~~~~ -->
   <axis n="5">
      <desc>View direction</desc>
     <number>
         <unix>4</unix>
         <mac>5</mac>
         <windows>6</windows>
     </number>
      <low>
         <repeatable>true</repeatable>
         <binding>
            <command>nasal</command>
            <script>
               v = getprop("/sim/current-view/view-number");
               if (v == 0 or v == 4) {
                  view.panViewDir(1);
               } else {
                  view.panViewDir(-1);
               }
            </script>
         </binding>
      </low>
      <high>
         <repeatable>true</repeatable>
         <binding>
            <command>nasal</command>
            <script>
               v = getprop("/sim/current-view/view-number");
               if (v == 0 or v == 4) {
                  view.panViewDir(-1);
               } else {
                  view.panViewDir(1);
               }
            </script>
         </binding>
      </high>
   </axis>

   <axis>
     <desc>View direction; zoom</desc>
     <number>
      <unix>5</unix>
      <mac>6</mac>
      <windows>7</windows>
      </number>
      <low>
         <repeatable>true</repeatable>
         <binding>
            <command>nasal</command>
            <script>
               view.panViewPitch(1);
            </script>
         </binding>
      </low>
      <high>
         <repeatable>true</repeatable>
         <binding>
            <command>nasal</command>
            <script>
               view.panViewPitch(-1);
            </script>
         </binding>
      </high>
   </axis>

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~ Button Bindings ~~~~~~~~~~~~~~~~~~~~~~~~ -->

   <!-- Trigger (R1) -->
   <button n="0">
      <desc>Button R1(1) (trigger): Brakes</desc>
      <repeatable type="bool">true</repeatable>
      <binding>
         <command>nasal</command>
         <script>
            controls.applyBrakes(1.0);
         </script>
      </binding>
      <mod-up>
      <binding>
         <command>nasal</command>
         <script>
            controls.applyBrakes(0.0);
         </script>
      </binding>
      </mod-up>
   </button>

   <!-- Button right of Hat switch, Labeled L1(2) -->
   <button n="1">
      <desc>Button L1(2) (joystick center): Push-To-Talk (for fgcom)</desc>
     <mod-up>
      <binding>
         <command>nasal</command>
         <script>
            reverser = !getprop("/controls/engines/engine[0]/reverser");
            props.setAll("/controls/engines/engine", "reverser", reverser);
            if (reverser) {
               gui.popupTip("Thrust Reverser ON");
            } else {
               gui.popupTip("Thrust Reverser OFF");
            }
         </script>
      </binding>
     </mod-up>
   </button>


   <!-- Front button, right of trigger, (R3) -->
   <button n="2">
      <desc>Button R3(3): Push to talk</desc>
     <binding>
         <command>nasal</command>
         <script>
             controls.ptt(1); # push-to-talk (fgcom) ON
         </script>
      </binding>
      <mod-up>
         <binding>
            <command>nasal</command>
            <script>
                controls.ptt(0); # push-to-talk (fgcom) OFF
            </script>
         </binding>
      </mod-up>
   </button>


   <!-- Button far right of Hat switch, Labeled L3(4) -->
   <button n="3">
      <desc>Button L3(4): Parking Brakes</desc>
     <repeatable type="bool">true</repeatable>
     <binding>
      <command>nasal</command>
      <script>
         setprop("/controls/gear/brake-left", 1);
          setprop("/controls/gear/brake-right", 1);
      </script>
     </binding>
     <mod-up>
      <binding>
         <command>nasal</command>
         <script>
            brake = !getprop("/controls/gear/brake-parking");
            setprop("/controls/gear/brake-parking", brake);
            if (brake) {
               gui.popupTip("Parking Brake ON");
            } else {
               gui.popupTip("Parking Brake OFF");
            }
            setprop("/controls/gear/brake-left", 0);
            setprop("/controls/gear/brake-right", 0);
         </script>
      </binding>
     </mod-up>
   </button>


   <!-- Throttle Button labeled 5 -->
   <button n="4">
      <desc>Button (5): Flaps up</desc>
      <repeatable type="bool">false</repeatable>
      <binding>
         <command>nasal</command>
         <script>
            controls.flapsDown(-1);
            gui.popupTip(sprintf("Flaps: %d deg", 30*getprop("/controls/flight/flaps")+0.1));
         </script>
      </binding>
      <mod-up>
         <binding>
            <command>nasal</command>
            <script>
                controls.flapsDown(0);
                gui.popupTip(sprintf("Flaps: %d deg", 30*getprop("/controls/flight/flaps")+0.1));              
            </script>
         </binding>
      </mod-up>
   </button>   

   <!-- Throttle Button labeled 6 -->
   <button n="5">
      <desc>Button (6): Flaps down</desc>
      <repeatable type="bool">false</repeatable>
      <binding>
         <command>nasal</command>
         <script>
            controls.flapsDown(1);
            gui.popupTip(sprintf("Flaps: %d deg", 30*getprop("/controls/flight/flaps")+0.1));                
         </script>
      </binding>
      <mod-up>
         <binding>
            <command>nasal</command>
            <script>
                controls.flapsDown(0);
                gui.popupTip(sprintf("Flaps: %d deg", 30*getprop("/controls/flight/flaps")+0.1));
            </script>
         </binding>
      </mod-up>
   </button>  

   <!-- Throttle Button labeled 7 (circle)-->
   <button n="6">
      <desc>Button (7): Cycle HUD</desc>
      <repeatable type="bool">false</repeatable>
      <binding>
         <command>nasal</command>
         <script>
            aircraft.HUD.cycle_color();
         </script>
      </binding>
   </button>
   
   <!-- Throttle Button labeled 8 (triangle) -->
   <button n="7">
      <desc>Button (8): Landing Gear Toggle</desc>
      <repeatable type="bool">false</repeatable>
      <binding>
         <command>nasal</command>
         <script>
         controls.gearToggle();
               
                       
         </script>
      </binding>
   </button>   
   
   <!-- Throttle Button labeled R2(9) -->
   <button n="8">
      <desc>Button R2(9): Switch View</desc>
      <repeatable type="bool">false</repeatable>
      <binding>
         <command>nasal</command>
         <script>
            view.stepView(1);
         </script>
      </binding>
   </button>
   
   <!-- Throttle Button labeled L2(10) -->
   <button n="9">
      <desc>Button L2(10): Vue Cockpit</desc>
      <repeatable type="bool">false</repeatable>
      <mod-up>
         <binding>
            <command>nasal</command>
            <script>
               setprop("/sim/current-view/view-number", 0);
            </script>
         </binding>
      </mod-up>
   </button> 
   
   <!-- Base Button SE -->
   <button n="10">
      <desc>Button SE: Magnetos</desc>
      <repeatable type="bool">false</repeatable>
      <binding>
         <command>nasal</command>
         <script>
            l = getprop("/controls/engines/engine/magnetos");
            if (l == 0) {
               props.setAll("/controls/engines/engine", "magnetos", 1);
            } elsif ( l == 1 ) {
               props.setAll("/controls/engines/engine", "magnetos", 2);
            } elsif ( l == 2 ) {
               props.setAll("/controls/engines/engine", "magnetos", 3);
            } elsif ( l == 3 ) {
               props.setAll("/controls/engines/engine", "magnetos", 0);
            }
        </script>
      </binding>
   </button>  
   
   <!-- Base Button ST -->
   <button n="11">
      <desc>Button ST: Start</desc>
      <repeatable type="bool">true</repeatable>
      <binding>
         <command>nasal</command>
         <script>
            setprop("/controls/engines/engine/starter", 1);
         setprop("/controls/engines/engine[1]/starter", 1);
         setprop("/controls/engines/engine[2]/starter", 1);
         setprop("/controls/engines/engine[3]/starter", 1);
         setprop("/controls/engines/engine[4]/starter", 1);
         </script>
      </binding>
     <mod-up>
      <binding>
          <command>nasal</command>
         <script>
            setprop("/controls/engines/engine/starter", 0);
            setprop("/controls/engines/engine[1]/starter", 0);
            setprop("/controls/engines/engine[2]/starter", 0);
            setprop("/controls/engines/engine[3]/starter", 0);
            setprop("/controls/engines/engine[4]/starter", 0);
         </script>
      </binding>
     </mod-up>
   </button>  
</PropertyList>
theben22
 
Posts: 1
Joined: Thu Mar 17, 2011 8:50 am

